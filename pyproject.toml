[build-system]
requires = [
    "setuptools>=75.3",
    "wheel",
    "setuptools-scm>=8",
    "numpy>=1.21",
    "numba>=0.57, <0.59",
    "cmake>=3.20",
]
build-backend = "setuptools.build_meta"

[project]
name = "pyomp"
dynamic = ["version"]
description = "Python OpenMP library based on Numba"
readme = "README.md"
requires-python = ">=3.8, <3.12"
license = { text = "BSD-2-Clause" }
classifiers = [
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Compilers",
]
dependencies = ["numba>=0.57, <0.59", "lark", "cffi", "setuptools"]
maintainers = [
    { name = "Giorgis Georgakoudis", email = "georgakoudis1@llnl.gov" },
]

[project.urls]
Homepage = "https://github.com/Python-for-HPC/PyOMP"
Issues = "https://github.com/Python-for-HPC/PyOMP/issues"

[tool.setuptools]
include-package-data = true
package-dir = { "" = "src" }

# Use discovery for the numba.* namespace.
[tool.setuptools.packages.find]
where = ["src"]
include = ["numba.openmp*"]
exclude = ["numba.openmp.tests*"]

# Bundle the CMake-installed artifacts into the wheel.
[tool.setuptools.package-data]
"numba.openmp.libs" = ["pass/*", "libomp/**/*", "nrt/*"]

# setuptools-scm config
[tool.setuptools_scm]
write_to = "src/numba/openmp/_version.py"

[tool.cibuildwheel]
archs = ["native"]
before-all = ["bash buildscripts/cibuildwheel/setup-miniconda3.sh"]
before-build = "rm -rf build dist src/numba/openmp/libs src/*.egg-info"
skip = "*-musllinux_*"
test-command = [
    # Run host OpenMP tests.
    "TEST_DEVICES=0 RUN_TARGET=0 python -m numba.runtests -v -- numba.openmp.tests.test_openmp",
    # Run device (cpu target) OpenMP tests.
    "OMP_TARGET_OFFLOAD=mandatory TEST_DEVICES=1 RUN_TARGET=1 python -m numba.runtests -v -- numba.openmp.tests.test_openmp.TestOpenmpTarget",
]

[tool.cibuildwheel.linux]
before-all = [
    "yum install -y elfutils-libelf-devel libffi-devel",
    "bash buildscripts/cibuildwheel/setup-miniconda3.sh",
]

[tool.cibuildwheel.environment]
LLVM_DIR = "_stage/miniconda3/envs/llvmdev"
CLANG_TOOL = "_stage/miniconda3/envs/clang14/bin/clang"
USE_CXX11_ABI = "1"
PIP_NO_INPUT = "1"
