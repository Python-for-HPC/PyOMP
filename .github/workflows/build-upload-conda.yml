name: Deploy conda pkgs (main)

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  # Job to deploy llvm-openmp-dev, runs once as it is independent of the python
  # version.
  conda-deploy-llvm-openmp-dev:
    name: llvm-openmp-dev ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        #os: [ubuntu-latest, macOS-latest, windows-latest]
        os: [ubuntu-latest, macOS-latest]
    steps:
      - uses: actions/checkout@v4
      - name: Set env for HEAD SHA
        run:
          echo "GITHUB_HEAD_SHA=${GITHUB_SHA}" >> $GITHUB_ENV
      - name: Create and activate conda env
        uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: "3.10"
          environment-file: .github/workflows/envs/env.yml
          auto-update-conda: false
          auto-activate-base: false
          show-channel-urls: true
      - name: Build and upload llvm-openmp-dev
        uses: uibcdf/action-build-and-upload-conda-packages@v1.3.0
        with:
          meta_yaml_dir: buildscripts/conda-recipes/llvm-openmp-dev
          python-version: "3.10"
          user: python-for-hpc
          label: main
          overwrite: true
          token: ${{ secrets.ANACONDA_TOKEN }}

  # Job to deploy llvmlite and numba, matrixed on os and python version.
  conda-deploy-llvmlite:
    needs: conda-deploy-llvm-openmp-dev
    name: llvmlite ${{ matrix.os }} ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        #os: [ubuntu-latest, macOS-latest, windows-latest]
        os: [ubuntu-latest, macOS-latest]
        python-version: ["3.8", "3.9", "3.10"]
    steps:
      - uses: actions/checkout@v4
      - name: Set env for HEAD SHA
        run:
          echo "GITHUB_HEAD_SHA=${GITHUB_SHA}" >> $GITHUB_ENV
      - name: Create and activate conda env
        uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: ${{ matrix.python-version }}
          environment-file: .github/workflows/envs/env.yml
          auto-update-conda: false
          auto-activate-base: false
          show-channel-urls: true
      - name: Build and upload llvmlite
        uses: uibcdf/action-build-and-upload-conda-packages@v1.3.0
        with:
          meta_yaml_dir: buildscripts/conda-recipes/llvmlite
          python-version: ${{ matrix.python-version }}
          user: python-for-hpc
          label: main
          overwrite: true
          token: ${{ secrets.ANACONDA_TOKEN }}

  # Job to deploy numba, matrixed on os and python version.
  conda-deploy-numba:
    needs: conda-deploy-llvmlite
    name: numba ${{ matrix.os }} ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        #os: [ubuntu-latest, macOS-latest, windows-latest]
        os: [ubuntu-latest, macOS-latest]
        python-version: ["3.8", "3.9", "3.10"]
    steps:
      - uses: actions/checkout@v4
      - name: Set env for HEAD SHA
        run:
          echo "GITHUB_HEAD_SHA=${GITHUB_SHA}" >> $GITHUB_ENV
      - name: Create and activate conda env
        uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: ${{ matrix.python-version }}
          environment-file: .github/workflows/envs/env.yml
          auto-update-conda: false
          auto-activate-base: false
          show-channel-urls: true
      - name: Build and upload numba
        uses: uibcdf/action-build-and-upload-conda-packages@v1.3.0
        with:
          meta_yaml_dir: buildscripts/conda-recipes/numba
          python-version: ${{ matrix.python-version }}
          user: python-for-hpc
          label: main
          overwrite: true
          token: ${{ secrets.ANACONDA_TOKEN }}

  # Job to deploy the pyomp metapackage, runs once as it is independent of the
  # python version.
  conda-deploy-pyomp:
    needs: conda-deploy-numba
    name: pyomp ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        #os: [ubuntu-latest, macOS-latest, windows-latest]
        os: [ubuntu-latest, macOS-latest]
    steps:
      - uses: actions/checkout@v4
      - name: Set env for HEAD SHA
        run:
          echo "GITHUB_HEAD_SHA=${GITHUB_SHA}" >> $GITHUB_ENV
      - name: Create and activate conda env
        uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: ${{ matrix.python-version }}
          environment-file: .github/workflows/envs/env.yml
          auto-update-conda: false
          auto-activate-base: false
          show-channel-urls: true
      - name: Build and upload pyomp
        uses: uibcdf/action-build-and-upload-conda-packages@v1.3.0
        with:
          meta_yaml_dir: buildscripts/conda-recipes/pyomp
          python-version: "3.10"
          user: python-for-hpc
          label: main
          overwrite: true
          token: ${{ secrets.ANACONDA_TOKEN }}
